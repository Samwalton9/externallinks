name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - staging

  # Run tests for any PRs.
  pull_request:

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and Start Image
        run: |
          cp template.env .env
          docker-compose up -d --build
      - name: Run tests
        run: |
          docker-compose exec -T app /django_wait_for_db.sh python django_wait_for_migrations.py test
      - name: Save externallinks image
        run: |
          docker save wikipedialibrary/externallinks:latest | gzip > externallinks.tar.gz
      - name: upload externallinks image
        uses: actions/upload-artifact@v2
        with:
          name: externallinks
          path: externallinks.tar.gz
      - name: Save eventstream image
        run: |
          docker save wikipedialibrary/eventstream:latest | gzip > eventstream.tar.gz
      - name: upload eventstream image
        uses: actions/upload-artifact@v2
        with:
          name: eventstream
          path: eventstream.tar.gz

# Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Download externallinks image
        uses: actions/download-artifact@v2
        with:
          name: externallinks

      - name: Load externallinks image
        run: docker load -i externallinks.tar.gz

      - name: Download eventstream image
        uses: actions/download-artifact@v2
        with:
          name: eventstream

      - name: Load eventstream image
        run: docker load -i eventstream.tar.gz

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push externallinks image
        run: |
          IMAGE_ID=wikipedialibrary/externallinks

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker tag $IMAGE_ID:latest $IMAGE_ID:app_branch_$VERSION
          docker tag $IMAGE_ID:latest $IMAGE_ID:app_commit_${GITHUB_SHA::8}
          docker push $IMAGE_ID:app_branch_$VERSION
          docker push $IMAGE_ID:app_commit_${GITHUB_SHA::8}

      - name: Push eventstream image
        run: |
          IMAGE_ID=wikipedialibrary/eventstream

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker tag $IMAGE_ID:latest $IMAGE_ID:eventstream_branch_$VERSION
          docker tag $IMAGE_ID:latest $IMAGE_ID:eventstream_commit_${GITHUB_SHA::8}
          docker push $IMAGE_ID:eventstream_branch_$VERSION
          docker push $IMAGE_ID:eventstream_commit_${GITHUB_SHA::8}
