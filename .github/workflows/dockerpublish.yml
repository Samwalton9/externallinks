name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - staging

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: externallinks

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:5.7
        env_file:
          - '.env'
        ports:
          - "3306:3306"
        command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-h", "localhost","-plinks"]
          timeout: 20s
          retries: 10
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          cp template.env .env
          docker-compose up -d --build
          docker-compose exec -T app python manage.py test


# Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=wikipedialibrary/externallinks

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          docker tag image $IMAGE_ID:branch_$VERSION
          docker tag image $IMAGE_ID:commit_${GITHUB_SHA::8}
          docker push $IMAGE_ID:branch_$VERSION
          docker push $IMAGE_ID:commit_${GITHUB_SHA::8}
